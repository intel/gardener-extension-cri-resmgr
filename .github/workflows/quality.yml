name: Quality

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: Jerome1337/gofmt-action@v1.0.5
        with:
          gofmt-path: "./pkg"
          gofmt-flags: "-l -d"

  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          # default fetch-depth is insufficent to find previous coverage notes
          fetch-depth: 10

      - name: dd
        run: go generate ./...

      # - uses: gwatts/go-coverage-action@v1
      #   id: coverage
      #   with:
      #     # Optional coverage threshold
      #     # use fail-coverage to determine what should happen below this threshold
      #     coverage-threshold: 80

      #     # collect coverage for all packages beyond the one under test
      #     cover-pkg: ./pkg/...

      #     #     # Ignore code-generated files when calculating coverage totals
      #     ignore-pattern: |
      #       ./test

      - name: golint
        run: |
          go env
          go get golang.org/x/lint/golint
          golint ./...

      #     \.pb\.go$
      #     \_string\.go$

      #     # A url that the html report will be accessible at, once your
      #     # workflow uploads it.  Used in the pull request comment.
      #     report-url: https://artifacts.example.com/go-coverage/${{ github.ref_name}}.html

      # - name: Upload coverage to s3
      #   # ensure this runs regardless of whether the threshold is met using always()
      #   if: always() && steps.coverage.outputs.report-pathname != ''
      #   run: |
      #     aws s3 cp ${{ steps.coverage.outputs.report-pathname }} s3://artifacts.example.com-bucket/go-coverage/${{ github.ref_name}}.html
