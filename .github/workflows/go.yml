name: Go Test, Format, Lint, and Coverage

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.19

      - name: dd
        run: go generate ./...

      - name: Run gofmt
        run: |
          if [ "$(gofmt -l . | wc -l)" -ne "0" ]; then
            gofmt -d .
            echo "gofmt found formatting errors"
            exit 1
          fi
        id: gofmt

      - name: Report gofmt Results
        if: success()
        uses: actions/upload-artifact@v1
        with:
          name: gofmt-report
          path: .

      # - name: Fail Build if gofmt found errors
      #   if: failure()
      #   uses: actions/upload-artifact@v1
      #   with:
      #     name: gofmt-error.txt
      #     path: .
      #     content: |
      #       gofmt found formatting errors

      # - name: golangci-lint
      #   uses: golangci/golangci-lint-action@v3

      # - name: Report golint Results
      #   if: steps.golint.outputs.exit-code == '0'
      #   uses: actions/upload-artifact@v1
      #   with:
      #     name: golint-report
      #     path: .

      # - name: Fail Build if golint found errors
      #   if: steps.golint.outputs.exit-code != '0'
      #   uses: actions/upload-artifact@v1
      #   with:
      #     name: golint-error.txt
      #     path: .
      #     content: |
      #       golint found linting errors

      - name: Run Tests and Generate Coverage Report
        run: |
          go test -coverprofile=coverage.out ./pkg/...
          go tool cover -html=coverage.out -o coverage.html

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v1
        with:
          name: coverage-report
          path: ./upload/coverage.html

      ######### UPLOAD

      # - uses: chrnorm/deployment-action@releases/v1
      #   name: Create GitHub deployment
      #   id: test
      #   with:
      #     token: ${{ secrets.GITHUB_TOKEN}}
      #     description: "Preview my app"
      #     environment: testing

      - uses: shallwefootball/s3-upload-action@master
        name: Upload S3
        id: S3
        with:
          aws_key_id: ${{ secrets.AWS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
          aws_bucket: ${{ secrets.AWS_BUCKET }}
          source_dir: ./upload/

      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          target_url: https://aws-bucket.s3.ap-northeast-2.amazonaws.com/${{steps.S3.outputs.object_key}}/index.html
          state: "success"
          deployment_id: ${{ steps.test.outputs.deployment_id }}
