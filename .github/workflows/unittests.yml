name: Audit

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

permissions:
  contents: read

jobs:
  audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
          cache: true

      - name: Verify dependencies
        run: go mod verify

      - name: Build
        run: make build

      - name: Run go vet
        run: go vet ./...

      - name: Run gofmt
        run: gofmt -d -l .

      # - name: Install golint
      #   run: go install golang.org/x/lint/golint@latest

      # - name: Run golint
      #   run: golint ./...

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: latest

          # Optional: working directory, useful for monorepos
          # working-directory: somedir

          # Optional: golangci-lint command line arguments.
          # args: --issues-exit-code=0
          # args: --timeout=60s

          # Optional: show only new issues if it's a pull request. The default value is `false`.
          # only-new-issues: true

          # Optional: if set to true then the all caching functionality will be complete disabled,
          #           takes precedence over all other caching options.
          # skip-cache: true

          # Optional: if set to true then the action don't cache or restore ~/go/pkg.
          skip-pkg-cache: true

          # Optional: if set to true then the action don't cache or restore ~/.cache/go-build.
          # skip-build-cache: true
          ## Future work
          ## skip-go-installation: true

      # Alternative for golint
      - name: Install staticcheck
        run: go install honnef.co/go/tools/cmd/staticcheck@latest

      - name: Run staticcheck
        run: staticcheck ./...

      - name: Install mockgen
        run: go install github.com/golang/mock/mockgen@v1.6.0

      - name: Run Unittest
        run: make test

      - name: Generate Coverage Report
        run: make generate-coverage

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v1
        with:
          name: coverage-report
          path: ./coverage.html
